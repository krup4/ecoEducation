networks:
  internal-network:
services:
  service:
    networks:
      - internal-network
    container_name: web
    build:
      context: ./
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.greeneduinitiative.ru`)"
      - "traefik.docker.network=internal-network"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
  qr_service:
    networks:
      - internal-network
    container_name: qr_web
    build:
      context: ./qr_service
      dockerfile: ./Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=internal-network"
      - "traefik.http.routers.backend2.rule=Host(`qr.greeneduinitiative.ru`)"
      - "traefik.http.routers.backend2.service=backend2"
      - "traefik.http.routers.backend2.tls=true"
      - "traefik.http.routers.backend2.entrypoints=websecure"
      - "traefik.http.services.backend2.loadbalancer.server.port=9000"
      - "traefik.http.routers.backend_wss.tls=true"
      - "traefik.http.routers.backend_wss.rule=Host(`qr.greeneduinitiative.ru`) && Path(`/ws`)"
      - "traefik.http.routers.backend_wss.service=backend_wss"
      - "traefik.http.routers.backend_wss.entrypoints=websecure"
      - "traefik.http.services.backend_wss.loadbalancer.server.port=7071"
    env_file:
      - .env
  db:
    networks:
      - internal-network
    container_name: postgresdb
    image: postgres:16
    command: -db-ssl-mode=allow
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
      - ./postgres-custom-config:/etc/postgresql
    env_file:
      - .env
  traefik:
    command:
      - "--ping=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.web.http.redirections.entrypoint.permanent=true"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.file.filename=/etc/traefik.yml"
    networks:
      - internal-network
    container_name: traefik
    image: traefik:3.1.3
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/
      - /var/run/docker.sock:/var/run/docker.sock
      - /app/traefik/traefik.yml:/etc/traefik.yml
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
  front_server:
    networks:
      - internal-network
    container_name: static_ws
    image: joseluisq/static-web-server:2
    volumes: 
      - ./www:/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`greeneduinitiative.ru`)"
      - "traefik.docker.network=internal-network"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
