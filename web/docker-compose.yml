networks:
  internal-network:
services:
  service:
    networks:
      - internal-network
    container_name: web
    build:
      context: ./
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.greeneduinitiative.ru`)"
      - "traefik.docker.network=internal-network"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.entrypoints=websecure"
  db:
    networks:
      - internal-network
    container_name: postgresdb
    image: postgres:16
    command: -db-ssl-mode=allow
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
      - ./postgres-custom-config:/etc/postgresql
    env_file:
      - .env
  traefik:
    command:
      - "--ping=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.file.filename=/etc/traefik.yml"
    networks:
      - internal-network
    container_name: traefik
    image: traefik:3.1.3
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/
      - /var/run/docker.sock:/var/run/docker.sock
      - /app/traefik/traefik.yml:/etc/traefik.yml
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
